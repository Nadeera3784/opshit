const program = require('commander');
const express = require('express');
const fs = require('fs');
const cors = require('cors');
const routes = require('./routes');
const env = require('dotenv').config({ path: './.env' });


const chalk = require('chalk');
const clear = require('clear');
const figlet = require('figlet');

const files = require('./config/files')
const kernel  = require('./app/kernel');



program
  .option('-v, --version', '1.0.1')
  .version('1.0.1')

program
  .command('serve')
  .action(() => {
  	const app = express();
    app.use(cors());
		app.use('/', routes);
    app.listen(process.env.PORT, () => {
      console.log(`opshit development server started on http://127.0.0.1:${process.env.PORT}`);
    });
  });

program
  .command('make:ctrl <ctrlname>') // No need of specifying arguments here
  .alias('controller')
  .description('create a controller')
  .action((ctrlname) => {
    fs.writeFile('app/controllers/'+ctrlname +'Controller.js', 'exports.'+ctrlname+'Controller = (req, res, next) => { \n\n};', function (err) {
	  if (err) throw err;
	  console.log(ctrlname+'Controller is created successfully.');
	});
  });

program.parse(process.argv);



/*clear();

console.log(
  chalk.yellow(
    figlet.textSync('opshit', { horizontalLayout: 'full' })
  )
);

if (files.directoryExists('node_modules')) {
  console.log(chalk.green('Already initialized node_modules!'));
  process.exit();
}
else
{
  console.log(chalk.red('Already initialized node_modules!'));
}*/


/*const run = async () => {
  const credentials = await kernel.askGithubCredentials();
  console.log(credentials);
};

run();*/